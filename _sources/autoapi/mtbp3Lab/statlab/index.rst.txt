mtbp3Lab.statlab
================

.. py:module:: mtbp3Lab.statlab


Submodules
----------

.. toctree::
   :maxdepth: 1

   /autoapi/mtbp3Lab/statlab/corr/index
   /autoapi/mtbp3Lab/statlab/kappa/index


Classes
-------

.. autoapisummary::

   mtbp3Lab.statlab.KappaCalculator


Package Contents
----------------

.. py:class:: KappaCalculator(y, infmt='sample_list', stringna='stringna')

   A class for calculating Cohen's kappa and Fleiss' kappa.

   Parameters:
   - y: The input data. It can be either a pandas DataFrame or a list.
   - infmt: The format of the input data. Allowed values are 'sample_list', 'sample_df', 'count_sq_df', and 'count_df'.
   - stringna: The string representation of missing values.

   Methods:
   - bootstrap_cohen_ci(n_iterations, confidence_level, outfmt, out_digits): Calculates the bootstrap confidence interval for Cohen's kappa.



   .. py:method:: __convert_2dlist_to_string(y=[], stringna='')
      :staticmethod:


      Converts a 2-dimensional list to a string representation.

      Parameters:
      - y: The input list.
      - stringna: The string representation of missing values.

      Returns:
      - The converted list.




   .. py:method:: __calculate_cohen_kappa(y1, y2)
      :staticmethod:


      Calculates Cohen's kappa.

      Parameters:
      - y1: The first rater's ratings.
      - y2: The second rater's ratings.

      Returns:
      - The calculated Cohen's kappa value.




   .. py:method:: __calculate_fleiss_kappa(y)
      :staticmethod:


      Calculates Fleiss' kappa.

      Parameters:
      - y: The count matrix.

      Returns:
      - The calculated Fleiss' kappa value.




   .. py:method:: bootstrap_cohen_ci(n_iterations=1000, confidence_level=0.95, outfmt='string', out_digits=6)

      Calculates the bootstrap confidence interval for Cohen's kappa.

      Parameters:
      - n_iterations: The number of bootstrap iterations.
      - confidence_level: The desired confidence level.
      - outfmt: The output format. Allowed values are 'string' and 'list'.
      - out_digits: The number of digits to round the output values.

      Returns:
      - If outfmt is 'string', returns a string representation of the result.
      - If outfmt is 'list', returns a list containing the result values.




   .. py:method:: create_bubble_plot(out_path='', axis_label=[], max_size_ratio=0, hist=False, reverse_y=False)

      Creates a bubble plot based on the y_count_sq matrix.

      Parameters:
      - out_path (str): The output path to save the plot. If not provided, the plot will be displayed.
      - title (str): The title of the plot. If not provided, the default title is 'Bubble Plot'.
      - axis_label (list): A list of two strings representing the labels for the x-axis and y-axis.
                           If not provided, the default labels are ['Rater 1', 'Rater 2'].
      - max_size_ratio (int): The maximum size ratio for the bubbles. The size of the bubbles is determined by the values in the y_count_sq matrix.
                              The maximum size of the bubbles will be max_size_ratio times the maximum value in the matrix.
                              If not provided, the default value is 100.

      Returns:
      - None

      Raises:
      - None




